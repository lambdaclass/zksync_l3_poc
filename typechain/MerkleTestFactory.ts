/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MerkleTest } from "./MerkleTest";

export class MerkleTestFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MerkleTest> {
    return super.deploy(overrides || {}) as Promise<MerkleTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleTest {
    return super.attach(address) as MerkleTest;
  }
  connect(signer: Signer): MerkleTestFactory {
    return super.connect(signer) as MerkleTestFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleTest {
    return new Contract(address, _abi, signerOrProvider) as MerkleTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_path",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_itemHash",
        type: "bytes32",
      },
    ],
    name: "calculateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x0001000000000002000500000000000200000000000103550000008003000039000000400030043f00000000030100190000006003300270000000260330019700000001022001900000003f0000c13d000000040230008c000000820000413d000000000201043b0000002802200197000000290220009c000000820000c13d0000000002000416000000000202004b000000820000c13d000000040230008a000000600220008c000000820000413d0000000402100370000000000202043b0000002a0420009c000000820000213d00000023042000390000002b05000041000000000634004b000000000600001900000000060580190000002b04400197000000000704004b00000000050080190000002b0440009c00000000040600190000000004056019000000000404004b000000820000c13d0000000404200039000000000441034f000000000504043b0000002a0450009c000000820000213d000300240020003d00000005025002100000000302200029000000000232004b000000820000213d0000002402100370000000000402043b0000004401100370000000000101043b000000000205004b000000470000c13d0000002c01000041000000800010043f0000002001000039000000840010043f0000000201000039000000a40010043f00000032010000410000008b0000013d0000000001000416000000000101004b000000820000c13d0000002001000039000001000010044300000120000004430000002701000041000000940001042e000001000250008c000000510000413d0000002c01000041000000800010043f0000002001000039000000840010043f0000000201000039000000a40010043f00000031010000410000008b0000013d0000000002540231000000840000c13d000180100000003d0000000003000019000200000005001d000400000003001d000000050230021000000003022000290000000002200367000000000202043b000500000004001d0000000103400190000000670000c13d0000000000100435000000200020043f0000000001000414000000260210009c0000002601008041000000c0011002100000002f011001c700000001020000290000006f0000013d0000000000200435000000200010043f0000000001000414000000260210009c0000002601008041000000c0011002100000002f011001c700008010020000390093008e0000040f00000001022001900000000205000029000000820000613d00000005040000290000000104400270000000000101043b00000004030000290000000103300039000000000253004b000000560000413d000000400200043d00000000001204350000002601000041000000260320009c0000000001024019000000400110021000000030011001c7000000940001042e000000000100001900000095000104300000002c01000041000000800010043f0000002001000039000000840010043f0000000201000039000000a40010043f0000002d01000041000000c40010043f0000002e01000041000000950001043000000091002104230000000102000039000000000001042d0000000002000019000000000001042d0000009300000432000000940001042e00000095000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000007a59206500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff800000000000000000000000000000000000000000000000000000000000000008c379aabf4e3c89505fe998849890d9b3073ab4d246509e54a0a8548a43510637041cb";
