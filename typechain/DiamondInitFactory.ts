/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DiamondInit } from "./DiamondInit";

export class DiamondInitFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DiamondInit> {
    return super.deploy(overrides || {}) as Promise<DiamondInit>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondInit {
    return super.attach(address) as DiamondInit;
  }
  connect(signer: Signer): DiamondInitFactory {
    return super.connect(signer) as DiamondInitFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondInit {
    return new Contract(address, _abi, signerOrProvider) as DiamondInit;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IVerifier",
            name: "verifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "governor",
            type: "address",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "genesisBatchHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "genesisIndexRepeatedStorageChanges",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "genesisBatchCommitment",
            type: "bytes32",
          },
          {
            internalType: "contract IAllowList",
            name: "allowList",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "recursionNodeLevelVkHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "recursionLeafLevelVkHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "recursionCircuitsSetVksHash",
                type: "bytes32",
              },
            ],
            internalType: "struct VerifierParams",
            name: "verifierParams",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "zkPorterIsAvailable",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "l2BootloaderBytecodeHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "l2DefaultAccountBytecodeHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "priorityTxMaxGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct DiamondInit.InitializeData",
        name: "_initalizeData",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x0001000000000002000200000000000200000000000103550000008003000039000000400030043f000000000301001900000060033002700000003c0330019700000001022001900000002a0000c13d000000040230008c000000460000413d000000000201043b0000003f02200197000000400220009c000000460000c13d0000000002000416000000000202004b000000460000c13d000000040230008a000001c00220008c000000460000413d0000003d02000041000000000302041a0000000104000039000000000042041b000000000203004b000000380000c13d0000000402100370000000000202043b000000440320009c000000460000213d000000000302004b000000420000c13d0000004101000041000000800010043f0000002001000039000000840010043f0000000201000039000000a40010043f00000050010000410000003f0000013d0000000001000416000000000101004b000000460000c13d0000003d01000041000000000201041a0000000103000039000000000031041b000000000102004b000000380000c13d0000002001000039000001000010044300000120000004430000003e01000041000000ec0001042e0000004101000041000000800010043f0000002001000039000000840010043f0000000201000039000000a40010043f0000004201000041000000c40010043f0000004301000041000000ed000104300000002403100370000000000303043b000000440430009c000000480000a13d0000000001000019000000ed00010430000000000403004b000000520000c13d0000004101000041000000800010043f0000002001000039000000840010043f0000000201000039000000a40010043f0000004f010000410000003f0000013d0000004404100370000000000404043b000000440540009c000000460000213d000000000504004b000000600000c13d0000004101000041000000800010043f0000002001000039000000840010043f0000000201000039000000a40010043f0000004e010000410000003f0000013d000001a405100370000000000605043b000000450560009c0000006c0000413d0000004101000041000000800010043f0000002001000039000000840010043f0000000201000039000000a40010043f0000004d010000410000003f0000013d000200000006001d0000000a05000039000000000605041a0000004606600197000000000226019f000000000025041b0000000702000039000000000502041a0000004605500197000000000335019f000000000032041b0000002402000039000000000302041a0000004603300197000000000343019f000000000032041b0000008402100370000000000202043b000000470320009c000000460000213d000000800000043f0000006403100370000000000303043b000000a00030043f000000c00020043f000000e00000043f0000004804000041000001000040043f000001200000043f000000a401100370000001400000043f000000000101043b000001600010043f000001a00000043f000001c00030043f000001e00020043f000002000000043f000002200040043f000002400000043f000002600000043f000002800010043f0000010001000039000001800010043f000002a001000039000000400010043f0000003c0300004100000000010004140000003c0210009c0000000001038019000000c00110021000000049011001c7000080100200003900eb00e60000040f0000000102200190000000460000613d000000000101043b000100000001001d00000000000004350000000e01000039000000200010043f00000000010004140000003c0210009c0000003c01008041000000c0011002100000004a011001c7000080100200003900eb00e60000040f0000000102200190000000460000613d000000000101043b0000000102000029000000000021041b0000000001000367000000c402100370000000000202043b000000440320009c000000460000213d0000001303000039000000000403041a0000004604400197000000000224019f000000000023041b000000e402100370000000000202043b0000001403000039000000000023041b0000010402100370000000000202043b0000001503000039000000000023041b0000012402100370000000000202043b0000001603000039000000000023041b0000014402100370000000000202043b000000000302004b0000000003000019000000010300c039000000000332004b000000460000c13d0000001903000039000000000403041a000001000500008a000000000454016f000000000224019f000000000023041b0000016402100370000000000202043b0000001703000039000000000023041b0000018401100370000000000101043b0000001802000039000000000012041b0000001a010000390000000202000029000000000021041b0000004b01000041000002a00010043f0000004c01000041000000ec0001042e000000e9002104230000000102000039000000000001042d0000000002000019000000000001042d000000eb00000432000000ec0001042e000000ed000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff8e94fed44239eb2314ab7a406345e6c5a8f0ccedf3b600de3d004e672c33abf40000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000971824cf0000000000000000000000000000000000000000000000000000000008c379a00000000000000000000000000000000000000000000000000000000031420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000800000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000004c4b401ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4700200000000000000000000000000000000000100000001a00000000000000000020000000000000000000000000000000000004000000000000000000000000033774e659306e47509050e97cb651e731180a42d458212294d30751925c551a20000000000000000000000000000000000000020000002a0000000000000000076750000000000000000000000000000000000000000000000000000000000006863000000000000000000000000000000000000000000000000000000000000767900000000000000000000000000000000000000000000000000000000000076740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000938570f713fc721cc29ef3710c984a76d9c816269b1ef761a8fb7ef1610c342a";
