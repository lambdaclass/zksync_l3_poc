/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { EventOnFallback } from "./EventOnFallback";

export class EventOnFallbackFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<EventOnFallback> {
    return super.deploy(overrides || {}) as Promise<EventOnFallback>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EventOnFallback {
    return super.attach(address) as EventOnFallback;
  }
  connect(signer: Signer): EventOnFallbackFactory {
    return super.connect(signer) as EventOnFallbackFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EventOnFallback {
    return new Contract(address, _abi, signerOrProvider) as EventOnFallback;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Called",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
];

const _bytecode =
  "0x0000008003000039000000400030043f00000001022001900000003f0000c13d0000000002000411000000800020043f0000000002000416000000a00020043f0000006002000039000000c00020043f000000000201001900000060022002700000001f0320018f0000001602200197000000e00020043f00000005042002720000001a0000613d00000000050000190000000506500210000000000761034f000000000707043b000001000660003900000000007604350000000105500039000000000645004b000000120000413d000000000503004b000000290000613d0000000504400210000000000141034f00000003033002100000010004400039000000000504043300000000053501cf000000000535022f000000000101043b0000010003300089000000000131022f00000000013101cf000000000151019f00000000001404350000010001200039000000000001043500000016010000410000000003000414000000160430009c00000000030180190000009f022000390000001702200197000000160420009c00000000010240190000006001100210000000c002300210000000000112019f00000018011001c70000800d0200003900000001030000390000001904000041004e00490000040f0000000101200190000000470000613d00000000010000190000004f0001042e0000000001000416000000000101004b000000470000c13d00000020010000390000010000100443000001200000044300000015010000410000004f0001042e000000000100001900000050000104300000004c002104210000000102000039000000000001042d0000000002000019000000000001042d0000004e000004320000004f0001042e0000005000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe00200000000000000000000000000000000000000000000800000000000000000998729e624ef59107d5781f8c021b04a5d7b5153dd0ef79e7a08a9f8ab40a5a3c35499e25bbdf0795f5437f6f151ca0ac98ea40e34a6fc890434e931dd697e1f";
