/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RevertReceiveAccount } from "./RevertReceiveAccount";

export class RevertReceiveAccountFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<RevertReceiveAccount> {
    return super.deploy(overrides || {}) as Promise<RevertReceiveAccount>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RevertReceiveAccount {
    return super.attach(address) as RevertReceiveAccount;
  }
  connect(signer: Signer): RevertReceiveAccountFactory {
    return super.connect(signer) as RevertReceiveAccountFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevertReceiveAccount {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RevertReceiveAccount;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "revertReceive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newValue",
        type: "bool",
      },
    ],
    name: "setRevertReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x0000008003000039000000400030043f0000000003010019000000600330027000000013033001970000000102200190000000190000c13d000000040230008c000000250000413d000000000201043b000000e002200270000000170420009c0000002c0000613d000000180120009c000000400000c13d0000000001000416000000000101004b000000400000c13d000000000100041a000000ff011001900000000001000019000000010100c039000000800010043f0000001901000041000000490001042e0000000001000416000000000101004b000000400000c13d000001000100008a000000000200041a000000000112016f000000000010041b0000002001000039000001000010044300000120000004430000001401000041000000490001042e000000000103004b000000400000c13d000000000100041a000000ff01100190000000420000c13d0000000001000019000000490001042e0000000002000416000000000202004b000000400000c13d000000040230008a000000200220008c000000400000413d0000000401100370000000000101043b000000000201004b0000000002000019000000010200c039000000000221004b000000400000c13d000001000200008a000000000300041a000000000223016f000000000112019f000000000010041b0000000001000019000000490001042e00000000010000190000004a00010430000000150100004100000000001004350000000101000039000000040010043f00000016010000410000004a000104300000004800000432000000490001042e0000004a00010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000000000000000000000607e2cb200000000000000000000000000000000000000000000000000000000aa4593dc0000000000000000000000000000000000000020000000800000000000000000d4da93733a561fec3dc34d9011d9bb7c8b46bb19bdd68f659231f081228fc92c";
