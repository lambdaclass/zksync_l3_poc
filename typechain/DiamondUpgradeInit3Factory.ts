/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DiamondUpgradeInit3 } from "./DiamondUpgradeInit3";

export class DiamondUpgradeInit3Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DiamondUpgradeInit3> {
    return super.deploy(overrides || {}) as Promise<DiamondUpgradeInit3>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondUpgradeInit3 {
    return super.attach(address) as DiamondUpgradeInit3;
  }
  connect(signer: Signer): DiamondUpgradeInit3Factory {
    return super.connect(signer) as DiamondUpgradeInit3Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondUpgradeInit3 {
    return new Contract(address, _abi, signerOrProvider) as DiamondUpgradeInit3;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_priorityTxMaxGasLimit",
        type: "uint256",
      },
      {
        internalType: "contract IAllowList",
        name: "_allowList",
        type: "address",
      },
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x0000008003000039000000400030043f0000000003010019000000600330027000000012033001970000000102200190000000370000c13d000000040230008c0000003f0000413d000000000201043b0000001402200197000000150220009c0000003f0000c13d000000040230008a000000600220008c0000003f0000413d0000002402100370000000000202043b000000160320009c0000003f0000213d0000004403100370000000000303043b000000160430009c0000003f0000213d000000000000041b0000000104000039000000000004041b0000000204000039000000000004041b0000000304000039000000000004041b0000000404000039000000000004041b0000000504000039000000000004041b0000000604000039000000000004041b0000000401100370000000000101043b0000001a04000039000000000014041b0000001301000039000000000401041a0000001704400197000000000224019f000000000021041b0000000a01000039000000000201041a0000001702200197000000000232019f000000000021041b0000001801000041000000800010043f0000001901000041000000420001042e0000000001000416000000000101004b0000003f0000c13d0000002001000039000001000010044300000120000004430000001301000041000000420001042e000000000100001900000043000104300000004100000432000000420001042e0000004300010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000002fed1f2900000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000033774e659306e47509050e97cb651e731180a42d458212294d30751925c551a20000000000000000000000000000000000000020000000800000000000000000d6864de52214e5f28b47581325f8832be66b3175abd054967c189cabb7ea637f";
