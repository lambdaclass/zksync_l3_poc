/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { BaseZkSyncUpgrade } from "./BaseZkSyncUpgrade";

export class BaseZkSyncUpgradeFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseZkSyncUpgrade {
    return new Contract(address, _abi, signerOrProvider) as BaseZkSyncUpgrade;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAllowList",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAllowList",
        type: "address",
      },
    ],
    name: "NewAllowList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousBytecodeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newBytecodeHash",
        type: "bytes32",
      },
    ],
    name: "NewL2BootloaderBytecodeHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousBytecodeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newBytecodeHash",
        type: "bytes32",
      },
    ],
    name: "NewL2DefaultAccountBytecodeHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "previousProtocolVersion",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newProtocolVersion",
        type: "uint256",
      },
    ],
    name: "NewProtocolVersion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldVerifier",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
    ],
    name: "NewVerifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "recursionNodeLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionLeafLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionCircuitsSetVksHash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct VerifierParams",
        name: "oldVerifierParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "recursionNodeLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionLeafLevelVkHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "recursionCircuitsSetVksHash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct VerifierParams",
        name: "newVerifierParams",
        type: "tuple",
      },
    ],
    name: "NewVerifierParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newProtocolVersion",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "l2UpgradeTxHash",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "txType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "from",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "to",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gasPerPubdataByteLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "paymaster",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256[4]",
                name: "reserved",
                type: "uint256[4]",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
              {
                internalType: "uint256[]",
                name: "factoryDeps",
                type: "uint256[]",
              },
              {
                internalType: "bytes",
                name: "paymasterInput",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "reservedDynamic",
                type: "bytes",
              },
            ],
            internalType: "struct IMailbox.L2CanonicalTransaction",
            name: "l2ProtocolUpgradeTx",
            type: "tuple",
          },
          {
            internalType: "bytes[]",
            name: "factoryDeps",
            type: "bytes[]",
          },
          {
            internalType: "bytes32",
            name: "bootloaderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "defaultAccountHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "verifier",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "recursionNodeLevelVkHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "recursionLeafLevelVkHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "recursionCircuitsSetVksHash",
                type: "bytes32",
              },
            ],
            internalType: "struct VerifierParams",
            name: "verifierParams",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "l1ContractsUpgradeCalldata",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "postUpgradeCalldata",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "upgradeTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newProtocolVersion",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "newAllowList",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct BaseZkSyncUpgrade.ProposedUpgrade",
        name: "upgrade",
        type: "tuple",
      },
    ],
    name: "UpgradeComplete",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "txType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "from",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "to",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gasPerPubdataByteLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "paymaster",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256[4]",
                name: "reserved",
                type: "uint256[4]",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
              {
                internalType: "uint256[]",
                name: "factoryDeps",
                type: "uint256[]",
              },
              {
                internalType: "bytes",
                name: "paymasterInput",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "reservedDynamic",
                type: "bytes",
              },
            ],
            internalType: "struct IMailbox.L2CanonicalTransaction",
            name: "l2ProtocolUpgradeTx",
            type: "tuple",
          },
          {
            internalType: "bytes[]",
            name: "factoryDeps",
            type: "bytes[]",
          },
          {
            internalType: "bytes32",
            name: "bootloaderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "defaultAccountHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "verifier",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "recursionNodeLevelVkHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "recursionLeafLevelVkHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "recursionCircuitsSetVksHash",
                type: "bytes32",
              },
            ],
            internalType: "struct VerifierParams",
            name: "verifierParams",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "l1ContractsUpgradeCalldata",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "postUpgradeCalldata",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "upgradeTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newProtocolVersion",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "newAllowList",
            type: "address",
          },
        ],
        internalType: "struct BaseZkSyncUpgrade.ProposedUpgrade",
        name: "_proposedUpgrade",
        type: "tuple",
      },
    ],
    name: "upgrade",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];
